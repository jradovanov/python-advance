# Разписваме функция, която държи един задължителен параметър, budget и използваме kwargs
# защото първо броят на подадените аргументи е неясен, а в задачата се посочва, че имаме ключ,
# който е продукта и стойности, които са цената и бройката. Това е типичен речник.
def shopping_list(budget, **kwargs):

# В условието е посочено да прекратим изпълнението на задачата ако бюджета е под 100 лева.
# Изпълняваме първо това условие.
    if budget < 100:
        # Тук не ползваме break за прекъсване на функцията, а return, който спира изпълнението
        # ако се влезе в това условие
        return "You do not have enough budget."

    # Правим променлива, която държи в себе си закупените стоки.
    # Особеното тук е, че ги държим не само като продукти, а като целият израз, който искат от нас
    bought_stock = []

    # Правим for loop като итерираме през KVP използвайки метода items от речника.
    # Целта ни е да достъпим всички ключове и стойности
    for key, value in kwargs.items():

        # Поради изискването да прекъснем програмата при покупката на 5 вида стоки,
        # вкарваме тази if проверка.
        if len(bought_stock) == 5:
            break

        product = key # Присвояваме продуктите към ключа в KVP, защото продуктите са водещи

        # Присвояваме стойностите на value към различни променливи отговарящи на търсените в задачата
        price = value[0] # Цената е първата стойност от двете във value
        quantity = value[1] # Количеството е втората стойност във value

        # Правим променлива, която да държи общата цена на всеки артикул в зависимост от бройката.
        # Това се прави, защото в задачата е посочено, че трябва да се купи, ако е възможно, цялото количество
        total = price * quantity

        # Правим проверка за всеки артикул дали се вмества в бюджета
        if budget >= total:

            # Ако проверката е True, намаляваме бюджета със стойността, която се държи в total
            budget -= total

            # Присвояваме закупените стоки от дадения вид, заедно с текста,
            # който искат от нас към променливата - bought_stock
            bought_stock.append(f"You bought {product} for {total:.2f} leva.")

    # Връщаме разопакована променливата, която държи покупките, като указваме всяка стока да е на нов ред.
    return "\n".join(bought_stock)


print(shopping_list(100,
                    microwave=(70, 2),
                    skirts=(15, 4),
                    coffee=(1.50, 10),
                    ))

print(shopping_list(20,
                    jeans=(19.99, 1),
                    ))

print(shopping_list(104,
                    cola=(1.20, 2),
                    candies=(0.25, 15),
                    bread=(1.80, 1),
                    pie=(10.50, 5),
                    tomatoes=(4.20, 1),
                    milk=(2.50, 2),
                    ))